import streamlit as st
import re
from analyzer import analyze_report

# --- UI 설정 (페이지 및 사이드바) ---
st.set_page_config(page_title="MirrorOrg MVP", layout="centered")

# 사이드바 구성
with st.sidebar:
    # 언어 선택 (기능은 유지하되, 현재는 프롬프트에 직접적인 영향은 없음)
    lang_option = st.radio("Language", ["한국어", "English"])
    
    st.info("#### 💡 **How to Use**\n1. Upload your team's chat log (e.g., KakaoTalk .txt file).\n2. Click the 'Analyze' button.\n3. Receive a 1-page diagnostic report generated by AI.")
    
    st.warning(
        "#### ⚠️ **Disclaimer**\n"
        "This is a technology demonstrator. The analysis is for reference only and should not be used for personnel evaluation. All uploaded data is processed in memory and not stored."
    )
    
    st.markdown("---")
    st.markdown("© 2025 MirrorMind, Inc. All Rights Reserved.")


# --- 메인 화면 구성 ---
st.title("🧠 MirrorOrg 조직 진단 리포트")
st.markdown("AI 조직 심리 분석가가 대화 기록을 바탕으로 팀의 소통 패턴과 시스템 리스크를 진단합니다.")

# 파일 업로더
uploaded_file = st.file_uploader(
    "분석할 대화 파일을 업로드하세요. (카카오톡 .txt 파일 권장)", 
    type="txt"
)

# 분석 실행 버튼
analyze_button = st.button("분석 리포트 생성하기", type="primary")

# --- 분석 로직 실행 ---
if analyze_button and uploaded_file:
    with st.spinner("AI가 대화 내용을 분석하여 리포트를 생성하는 중입니다... 잠시만 기다려주세요."):
        try:
            # 파일 내용 읽기 및 전처리
            chat_content = uploaded_file.read().decode("utf-8")
            
            # 너무 긴 대화는 최신 3000줄로 제한하여 API 비용 및 시간 관리
            lines = chat_content.split('\n')
            if len(lines) > 3000:
                chat_content = '\n'.join(lines[-3000:])
                st.toast("대화 내용이 너무 길어 최신 3000줄만 분석합니다.")

            # 분석 모듈 호출
            report = analyze_report(chat_content)

            # 결과 출력
            if report:
                st.markdown("---")
                st.success("✅ AI 조직 진단 리포트가 완성되었습니다.")
                st.markdown(report)
            else:
                st.error("리포트 생성에 실패했습니다. 파일 내용이 너무 짧거나 유효하지 않은 형식일 수 있습니다.")

        except Exception as e:
            st.error(f"오류가 발생했습니다: {e}")

elif analyze_button and not uploaded_file:
    st.warning("분석을 위해 먼저 대화 파일을 업로드해주세요.")
